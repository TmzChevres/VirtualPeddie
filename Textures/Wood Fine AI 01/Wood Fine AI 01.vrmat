<vrmat>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap/BitmapBuffer" type="bitmap" layout="">
		<plugin>
			<vrayplugin version="8" type="bitmap" name="BitmapBuffer">
				<parameters>
					<parameter handler="default" listType="none" type="bool" name="allow_negative_colors" label="allow_negative_colors">
						<value>0</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="color_space" label="color_space">
						<value>0</value>
					</parameter>
					<parameter handler="FileBrowserHandler" listType="none" type="string" name="file" label="file">
						<value>./maps/Wood_Fine_AI_01_NRM.jpg</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="filter_blur" label="filter_blur">
						<value>0.15</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="filter_type" label="filter_type">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_number" label="frame_number">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_offset" label="frame_offset">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="frame_sequence" label="frame_sequence">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="gamma" label="gamma">
						<value>0.45454545</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_end_condition" label="ifl_end_condition">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="ifl_playback_rate" label="ifl_playback_rate">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_start_frame" label="ifl_start_frame">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="interpolation" label="interpolation">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="load_file" label="load_file">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="maya_compatible" label="maya_compatible">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_data_window" label="use_data_window">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap/UVWGenChannel" type="uvw" layout="">
		<plugin>
			<vrayplugin version="8" type="uvw" name="UVWGenChannel">
				<parameters>
					<parameter handler="default" listType="none" type="vector" name="coverage" label="coverage">
						<value>
							<x>1</x>
							<y>1</y>
							<z>1</z>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_u" label="crop_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_v" label="crop_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_w" label="crop_w">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="duvw_scale" label="duvw_scale">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="nsamples" label="nsamples">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="transform" name="tex_transform" label="tex_transform">
						<value>
							<vector>
								<x>1</x>
								<y>0</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>1</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>1</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>0</z>
							</vector>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_double_sided_mode" label="use_double_sided_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="uvw_channel" label="uvw_channel">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output vector texture" name="uvw_coords" label="uvw_coords">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="transform texture" name="uvw_transform_tex" label="uvw_transform_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_mode" label="wrap_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_u" label="wrap_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_v" label="wrap_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_w" label="wrap_w">
						<value>0</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap/nouvw_color" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexCombineColor">
				<parameters>
					<parameter handler="default" listType="none" type="color" name="color" label="color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="result_invert" label="result_invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="result_multiplier" label="result_multiplier">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="texture" label="texture">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="texture_multiplier" label="texture_multiplier">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="texture_on" label="texture_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexBitmap">
				<parameters>
					<parameter handler="default" listType="none" type="integer" name="alpha_from_intensity" label="alpha_from_intensity">
						<value>0</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_mult" label="alpha_mult">
						<value>1</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_offset" label="alpha_offset">
						<value>0</value>
					</parameter>
					<parameter handler="None" listType="none" type="plugin" name="bitmap" label="bitmap">
						<value>/Wood Fine AI 01/TexBitmap/BitmapBuffer</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="color" label="color">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_mult" label="color_mult">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_offset" label="color_offset">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="compatibility_with" label="compatibility_with">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="h" label="h">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert" label="invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert_alpha" label="invert_alpha">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="jitter" label="jitter">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="nouvw_color" label="nouvw_color">
						<value>/Wood Fine AI 01/TexBitmap/nouvw_color</value>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_alpha" label="out_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_intensity" label="out_intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="out_transparency" label="out_transparency">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="placement_type" label="placement_type">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="tile" label="tile">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_u" label="tile_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_v" label="tile_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="u" label="u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="un_noise_phase" label="un_noise_phase">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_amount" label="uv_noise_amount">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_animate" label="uv_noise_animate">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_levels" label="uv_noise_levels">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_on" label="uv_noise_on">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_size" label="uv_noise_size">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value>/Wood Fine AI 01/TexBitmap/UVWGenChannel</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="v" label="v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="w" label="w">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="nouvw_color_color" label="nouvw_color_color" isUserData="1">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="acolor texture" name="nouvw_color_tex" label="nouvw_color_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="nouvw_color_tex_mult" label="nouvw_color_tex_mult" isUserData="1">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="nouvw_color_tex_on" label="nouvw_color_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap1/BitmapBuffer" type="bitmap" layout="">
		<plugin>
			<vrayplugin version="8" type="bitmap" name="BitmapBuffer">
				<parameters>
					<parameter handler="default" listType="none" type="bool" name="allow_negative_colors" label="allow_negative_colors">
						<value>0</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="color_space" label="color_space">
						<value>2</value>
					</parameter>
					<parameter handler="FileBrowserHandler" listType="none" type="string" name="file" label="file">
						<value>./maps/Wood_Fine_AI_01_DISP.jpg</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="filter_blur" label="filter_blur">
						<value>0.15</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="filter_type" label="filter_type">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_number" label="frame_number">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_offset" label="frame_offset">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="frame_sequence" label="frame_sequence">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="gamma" label="gamma">
						<value>0.45454545</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_end_condition" label="ifl_end_condition">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="ifl_playback_rate" label="ifl_playback_rate">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_start_frame" label="ifl_start_frame">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="interpolation" label="interpolation">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="load_file" label="load_file">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="maya_compatible" label="maya_compatible">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_data_window" label="use_data_window">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap1/UVWGenChannel" type="uvw" layout="">
		<plugin>
			<vrayplugin version="8" type="uvw" name="UVWGenChannel">
				<parameters>
					<parameter handler="default" listType="none" type="vector" name="coverage" label="coverage">
						<value>
							<x>1</x>
							<y>1</y>
							<z>1</z>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_u" label="crop_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_v" label="crop_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_w" label="crop_w">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="duvw_scale" label="duvw_scale">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="nsamples" label="nsamples">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="transform" name="tex_transform" label="tex_transform">
						<value>
							<vector>
								<x>1</x>
								<y>0</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>1</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>1</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>0</z>
							</vector>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_double_sided_mode" label="use_double_sided_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="uvw_channel" label="uvw_channel">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output vector texture" name="uvw_coords" label="uvw_coords">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="transform texture" name="uvw_transform_tex" label="uvw_transform_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_mode" label="wrap_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_u" label="wrap_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_v" label="wrap_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_w" label="wrap_w">
						<value>0</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap1/nouvw_color" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexCombineColor">
				<parameters>
					<parameter handler="default" listType="none" type="color" name="color" label="color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="result_invert" label="result_invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="result_multiplier" label="result_multiplier">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="texture" label="texture">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="texture_multiplier" label="texture_multiplier">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="texture_on" label="texture_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/TexBitmap1" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexBitmap">
				<parameters>
					<parameter handler="default" listType="none" type="integer" name="alpha_from_intensity" label="alpha_from_intensity">
						<value>0</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_mult" label="alpha_mult">
						<value>1</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_offset" label="alpha_offset">
						<value>0</value>
					</parameter>
					<parameter handler="None" listType="none" type="plugin" name="bitmap" label="bitmap">
						<value>/Wood Fine AI 01/TexBitmap1/BitmapBuffer</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="color" label="color">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_mult" label="color_mult">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_offset" label="color_offset">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="compatibility_with" label="compatibility_with">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="h" label="h">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert" label="invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert_alpha" label="invert_alpha">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="jitter" label="jitter">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="nouvw_color" label="nouvw_color">
						<value>/Wood Fine AI 01/TexBitmap1/nouvw_color</value>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_alpha" label="out_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_intensity" label="out_intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="out_transparency" label="out_transparency">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="placement_type" label="placement_type">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="tile" label="tile">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_u" label="tile_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_v" label="tile_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="u" label="u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="un_noise_phase" label="un_noise_phase">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_amount" label="uv_noise_amount">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_animate" label="uv_noise_animate">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_levels" label="uv_noise_levels">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_on" label="uv_noise_on">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_size" label="uv_noise_size">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value>/Wood Fine AI 01/TexBitmap1/UVWGenChannel</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="v" label="v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="w" label="w">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="nouvw_color_color" label="nouvw_color_color" isUserData="1">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="acolor texture" name="nouvw_color_tex" label="nouvw_color_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="nouvw_color_tex_mult" label="nouvw_color_tex_mult" isUserData="1">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="nouvw_color_tex_on" label="nouvw_color_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap/BitmapBuffer" type="bitmap" layout="">
		<plugin>
			<vrayplugin version="8" type="bitmap" name="BitmapBuffer">
				<parameters>
					<parameter handler="default" listType="none" type="bool" name="allow_negative_colors" label="allow_negative_colors">
						<value>0</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="color_space" label="color_space">
						<value>2</value>
					</parameter>
					<parameter handler="FileBrowserHandler" listType="none" type="string" name="file" label="file">
						<value>./maps/Wood_Fine_AI_01_COLOR.jpg</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="filter_blur" label="filter_blur">
						<value>0.15</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="filter_type" label="filter_type">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_number" label="frame_number">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_offset" label="frame_offset">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="frame_sequence" label="frame_sequence">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="gamma" label="gamma">
						<value>0.45454545</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_end_condition" label="ifl_end_condition">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="ifl_playback_rate" label="ifl_playback_rate">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_start_frame" label="ifl_start_frame">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="interpolation" label="interpolation">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="load_file" label="load_file">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="maya_compatible" label="maya_compatible">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_data_window" label="use_data_window">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap/UVWGenChannel" type="uvw" layout="">
		<plugin>
			<vrayplugin version="8" type="uvw" name="UVWGenChannel">
				<parameters>
					<parameter handler="default" listType="none" type="vector" name="coverage" label="coverage">
						<value>
							<x>1</x>
							<y>1</y>
							<z>1</z>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_u" label="crop_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_v" label="crop_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_w" label="crop_w">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="duvw_scale" label="duvw_scale">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="nsamples" label="nsamples">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="transform" name="tex_transform" label="tex_transform">
						<value>
							<vector>
								<x>1</x>
								<y>0</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>1</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>1</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>0</z>
							</vector>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_double_sided_mode" label="use_double_sided_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="uvw_channel" label="uvw_channel">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output vector texture" name="uvw_coords" label="uvw_coords">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="transform texture" name="uvw_transform_tex" label="uvw_transform_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_mode" label="wrap_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_u" label="wrap_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_v" label="wrap_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_w" label="wrap_w">
						<value>0</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap/nouvw_color" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexCombineColor">
				<parameters>
					<parameter handler="default" listType="none" type="color" name="color" label="color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="result_invert" label="result_invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="result_multiplier" label="result_multiplier">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="texture" label="texture">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="texture_multiplier" label="texture_multiplier">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="texture_on" label="texture_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexBitmap">
				<parameters>
					<parameter handler="default" listType="none" type="integer" name="alpha_from_intensity" label="alpha_from_intensity">
						<value>0</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_mult" label="alpha_mult">
						<value>1</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_offset" label="alpha_offset">
						<value>0</value>
					</parameter>
					<parameter handler="None" listType="none" type="plugin" name="bitmap" label="bitmap">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap/BitmapBuffer</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="color" label="color">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_mult" label="color_mult">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_offset" label="color_offset">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="compatibility_with" label="compatibility_with">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="h" label="h">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert" label="invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert_alpha" label="invert_alpha">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="jitter" label="jitter">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="nouvw_color" label="nouvw_color">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap/nouvw_color</value>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_alpha" label="out_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_intensity" label="out_intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="out_transparency" label="out_transparency">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="placement_type" label="placement_type">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="tile" label="tile">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_u" label="tile_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_v" label="tile_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="u" label="u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="un_noise_phase" label="un_noise_phase">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_amount" label="uv_noise_amount">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_animate" label="uv_noise_animate">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_levels" label="uv_noise_levels">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_on" label="uv_noise_on">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_size" label="uv_noise_size">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap/UVWGenChannel</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="v" label="v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="w" label="w">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="nouvw_color_color" label="nouvw_color_color" isUserData="1">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="acolor texture" name="nouvw_color_tex" label="nouvw_color_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="nouvw_color_tex_mult" label="nouvw_color_tex_mult" isUserData="1">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="nouvw_color_tex_on" label="nouvw_color_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap1/BitmapBuffer" type="bitmap" layout="">
		<plugin>
			<vrayplugin version="8" type="bitmap" name="BitmapBuffer">
				<parameters>
					<parameter handler="default" listType="none" type="bool" name="allow_negative_colors" label="allow_negative_colors">
						<value>0</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="color_space" label="color_space">
						<value>0</value>
					</parameter>
					<parameter handler="FileBrowserHandler" listType="none" type="string" name="file" label="file">
						<value>./maps/Wood_Fine_AI_01_REFL.jpg</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="filter_blur" label="filter_blur">
						<value>0.15</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="filter_type" label="filter_type">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_number" label="frame_number">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_offset" label="frame_offset">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="frame_sequence" label="frame_sequence">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="gamma" label="gamma">
						<value>0.45454545</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_end_condition" label="ifl_end_condition">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="ifl_playback_rate" label="ifl_playback_rate">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_start_frame" label="ifl_start_frame">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="interpolation" label="interpolation">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="load_file" label="load_file">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="maya_compatible" label="maya_compatible">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_data_window" label="use_data_window">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap1/UVWGenChannel" type="uvw" layout="">
		<plugin>
			<vrayplugin version="8" type="uvw" name="UVWGenChannel">
				<parameters>
					<parameter handler="default" listType="none" type="vector" name="coverage" label="coverage">
						<value>
							<x>1</x>
							<y>1</y>
							<z>1</z>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_u" label="crop_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_v" label="crop_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_w" label="crop_w">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="duvw_scale" label="duvw_scale">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="nsamples" label="nsamples">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="transform" name="tex_transform" label="tex_transform">
						<value>
							<vector>
								<x>1</x>
								<y>0</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>1</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>1</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>0</z>
							</vector>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_double_sided_mode" label="use_double_sided_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="uvw_channel" label="uvw_channel">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output vector texture" name="uvw_coords" label="uvw_coords">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="transform texture" name="uvw_transform_tex" label="uvw_transform_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_mode" label="wrap_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_u" label="wrap_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_v" label="wrap_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_w" label="wrap_w">
						<value>0</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap1/nouvw_color" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexCombineColor">
				<parameters>
					<parameter handler="default" listType="none" type="color" name="color" label="color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="texture" label="texture">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="texture_multiplier" label="texture_multiplier">
						<value>1.0</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap1" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexBitmap">
				<parameters>
					<parameter handler="default" listType="none" type="integer" name="alpha_from_intensity" label="alpha_from_intensity">
						<value>0</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_mult" label="alpha_mult">
						<value>1</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_offset" label="alpha_offset">
						<value>0</value>
					</parameter>
					<parameter handler="None" listType="none" type="plugin" name="bitmap" label="bitmap">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap1/BitmapBuffer</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="color" label="color">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_mult" label="color_mult">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_offset" label="color_offset">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="compatibility_with" label="compatibility_with">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="h" label="h">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert" label="invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert_alpha" label="invert_alpha">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="jitter" label="jitter">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="nouvw_color" label="nouvw_color">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap1/nouvw_color</value>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_alpha" label="out_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_intensity" label="out_intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="out_transparency" label="out_transparency">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="placement_type" label="placement_type">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="tile" label="tile">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_u" label="tile_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_v" label="tile_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="u" label="u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="un_noise_phase" label="un_noise_phase">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_amount" label="uv_noise_amount">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_animate" label="uv_noise_animate">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_levels" label="uv_noise_levels">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_on" label="uv_noise_on">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_size" label="uv_noise_size">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap1/UVWGenChannel</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="v" label="v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="w" label="w">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="nouvw_color_color" label="nouvw_color_color" isUserData="1">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="acolor texture" name="nouvw_color_tex" label="nouvw_color_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="nouvw_color_tex_mult" label="nouvw_color_tex_mult" isUserData="1">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="nouvw_color_tex_on" label="nouvw_color_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap2/BitmapBuffer" type="bitmap" layout="">
		<plugin>
			<vrayplugin version="8" type="bitmap" name="BitmapBuffer">
				<parameters>
					<parameter handler="default" listType="none" type="bool" name="allow_negative_colors" label="allow_negative_colors">
						<value>0</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="color_space" label="color_space">
						<value>0</value>
					</parameter>
					<parameter handler="FileBrowserHandler" listType="none" type="string" name="file" label="file">
						<value>./maps/Wood_Fine_AI_01_GLOSS.jpg</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="filter_blur" label="filter_blur">
						<value>0.15</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="filter_type" label="filter_type">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_number" label="frame_number">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="frame_offset" label="frame_offset">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="frame_sequence" label="frame_sequence">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="gamma" label="gamma">
						<value>0.45454545</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_end_condition" label="ifl_end_condition">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="ifl_playback_rate" label="ifl_playback_rate">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="ifl_start_frame" label="ifl_start_frame">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="interpolation" label="interpolation">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="load_file" label="load_file">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="maya_compatible" label="maya_compatible">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_data_window" label="use_data_window">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap2/UVWGenChannel" type="uvw" layout="">
		<plugin>
			<vrayplugin version="8" type="uvw" name="UVWGenChannel">
				<parameters>
					<parameter handler="default" listType="none" type="vector" name="coverage" label="coverage">
						<value>
							<x>1</x>
							<y>1</y>
							<z>1</z>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_u" label="crop_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_v" label="crop_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="crop_w" label="crop_w">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="duvw_scale" label="duvw_scale">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="nsamples" label="nsamples">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="transform" name="tex_transform" label="tex_transform">
						<value>
							<vector>
								<x>1</x>
								<y>0</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>1</y>
								<z>0</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>1</z>
							</vector>
							<vector>
								<x>0</x>
								<y>0</y>
								<z>0</z>
							</vector>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_double_sided_mode" label="use_double_sided_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="uvw_channel" label="uvw_channel">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output vector texture" name="uvw_coords" label="uvw_coords">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="transform texture" name="uvw_transform_tex" label="uvw_transform_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_mode" label="wrap_mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_u" label="wrap_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_v" label="wrap_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="wrap_w" label="wrap_w">
						<value>0</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap2/nouvw_color" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexCombineColor">
				<parameters>
					<parameter handler="default" listType="none" type="color" name="color" label="color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="texture" label="texture">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="texture_multiplier" label="texture_multiplier">
						<value>1.0</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/TexBitmap2" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexBitmap">
				<parameters>
					<parameter handler="default" listType="none" type="integer" name="alpha_from_intensity" label="alpha_from_intensity">
						<value>0</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_mult" label="alpha_mult">
						<value>1</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float texture" name="alpha_offset" label="alpha_offset">
						<value>0</value>
					</parameter>
					<parameter handler="None" listType="none" type="plugin" name="bitmap" label="bitmap">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap2/BitmapBuffer</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="color" label="color">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_mult" label="color_mult">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_offset" label="color_offset">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="compatibility_with" label="compatibility_with">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="h" label="h">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert" label="invert">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="invert_alpha" label="invert_alpha">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="jitter" label="jitter">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="nouvw_color" label="nouvw_color">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap2/nouvw_color</value>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_alpha" label="out_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="out_intensity" label="out_intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="out_transparency" label="out_transparency">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="placement_type" label="placement_type">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="tile" label="tile">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_u" label="tile_u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="tile_v" label="tile_v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="u" label="u">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="un_noise_phase" label="un_noise_phase">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_amount" label="uv_noise_amount">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_animate" label="uv_noise_animate">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_levels" label="uv_noise_levels">
						<value>1</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="uv_noise_on" label="uv_noise_on">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="uv_noise_size" label="uv_noise_size">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="uvwgen" label="uvwgen">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap2/UVWGenChannel</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="v" label="v">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="w" label="w">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="nouvw_color_color" label="nouvw_color_color" isUserData="1">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="acolor texture" name="nouvw_color_tex" label="nouvw_color_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="nouvw_color_tex_mult" label="nouvw_color_tex_mult" isUserData="1">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="nouvw_color_tex_on" label="nouvw_color_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/anisotropy" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/anisotropy_rotation" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/diffuse" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/environment_override" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/fog_color_tex" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/fresnel_ior" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>1.6</r>
							<g>1.6</g>
							<b>1.6</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/hilight_glossiness" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/reflect" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap1</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/reflect_glossiness" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap2</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/refract" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/refract_glossiness" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/refract_ior" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>1.6</r>
							<g>1.6</g>
							<b>1.6</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/roughness" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF/translucency_color" type="texture" layout="">
		<plugin>
			<vrayplugin version="8" type="texture" name="TexAColorOp">
				<parameters>
					<parameter handler="default" listType="none" type="output float texture" name="alpha" label="alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="blue" label="blue">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_a" label="color_a">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="color_b" label="color_b">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="difference" label="difference">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="division" label="division">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="green" label="green">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="intensity" label="intensity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="maximum" label="maximum">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="minimum" label="minimum">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="mode" label="mode">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_a" label="mult_a">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="mult_b" label="mult_b">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="power" label="power">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="product" label="product">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output float texture" name="red" label="red">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_a" label="result_a">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="result_alpha" label="result_alpha">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="result_b" label="result_b">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="output acolor texture" name="sum" label="sum">
						<value/>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01/VRayBRDF" type="BRDF" layout="BRDFVRayMtlLayout">
		<plugin>
			<vrayplugin version="8" type="BRDF" name="BRDFVRayMtl">
				<parameters>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="anisotropy" label="anisotropy">
						<value>/Wood Fine AI 01/VRayBRDF/anisotropy</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="anisotropy_axis" label="anisotropy_axis">
						<value>2</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="anisotropy_derivation" label="anisotropy_derivation">
						<value>0</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="anisotropy_rotation" label="anisotropy_rotation">
						<value>/Wood Fine AI 01/VRayBRDF/anisotropy_rotation</value>
					</parameter>
					<parameter handler="UVWHandler" listType="none" type="plugin" name="anisotropy_uvwgen" label="anisotropy_uvwgen">
						<value/>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="brdf_type" label="brdf_type">
						<value>4</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="diffuse" label="diffuse">
						<value>/Wood Fine AI 01/VRayBRDF/diffuse</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="dispersion" label="dispersion">
						<value>50</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="dispersion_on" label="dispersion_on">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="environment_override" label="environment_override">
						<value>/Wood Fine AI 01/VRayBRDF/environment_override</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="environment_priority" label="environment_priority">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="fog_bias" label="fog_bias">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="fog_color" label="fog_color">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="fog_color_tex" label="fog_color_tex">
						<value>/Wood Fine AI 01/VRayBRDF/fog_color_tex</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="fog_mult" label="fog_mult">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="fog_unit_scale_on" label="fog_unit_scale_on">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="fresnel" label="fresnel">
						<value>1</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="fresnel_ior" label="fresnel_ior">
						<value>/Wood Fine AI 01/VRayBRDF/fresnel_ior</value>
					</parameter>
					<parameter handler="LockButtonHandler" listType="none" type="bool" name="fresnel_ior_lock" label="fresnel_ior_lock">
						<value>1</value>
					</parameter>
					<parameter handler="DoubleSpinBoxHandler" listType="none" type="float" name="gtr_gamma" label="gtr_gamma">
						<value>2</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="gtr_oldGamma" label="gtr_oldGamma">
						<value>0</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="hilight_glossiness" label="hilight_glossiness">
						<value>/Wood Fine AI 01/VRayBRDF/hilight_glossiness</value>
					</parameter>
					<parameter handler="LockButtonHandler" listType="none" type="bool" name="hilight_glossiness_lock" label="hilight_glossiness_lock">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="hilight_soften" label="hilight_soften">
						<value>0</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="opacity" label="opacity">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="option_cutoff" label="option_cutoff">
						<value>0.001</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="option_double_sided" label="option_double_sided">
						<value>1</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="option_energy_mode" label="option_energy_mode">
						<value>0</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="option_fix_dark_edges" label="option_fix_dark_edges">
						<value>1</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="option_glossy_rays_as_gi" label="option_glossy_rays_as_gi">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="option_reflect_on_back" label="option_reflect_on_back">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="option_use_irradiance_map" label="option_use_irradiance_map">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refl_imap_color_thresh" label="refl_imap_color_thresh">
						<value>0.25</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refl_imap_max_rate" label="refl_imap_max_rate">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refl_imap_min_rate" label="refl_imap_min_rate">
						<value>-1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refl_imap_norm_thresh" label="refl_imap_norm_thresh">
						<value>0.4</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refl_imap_samples" label="refl_imap_samples">
						<value>20</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="refl_interpolation_on" label="refl_interpolation_on">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="reflect" label="reflect">
						<value>/Wood Fine AI 01/VRayBRDF/reflect</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="reflect_affect_alpha" label="reflect_affect_alpha">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="reflect_depth" label="reflect_depth">
						<value>5</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="reflect_dim_distance" label="reflect_dim_distance">
						<value>1e+018</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="reflect_dim_distance_falloff" label="reflect_dim_distance_falloff">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="reflect_dim_distance_on" label="reflect_dim_distance_on">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="reflect_exit_color" label="reflect_exit_color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="reflect_glossiness" label="reflect_glossiness">
						<value>/Wood Fine AI 01/VRayBRDF/reflect_glossiness</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="reflect_subdivs" label="reflect_subdivs">
						<value>8</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="reflect_trace" label="reflect_trace">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refr_imap_color_thresh" label="refr_imap_color_thresh">
						<value>0.25</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refr_imap_max_rate" label="refr_imap_max_rate">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refr_imap_min_rate" label="refr_imap_min_rate">
						<value>-1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refr_imap_norm_thresh" label="refr_imap_norm_thresh">
						<value>0.4</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refr_imap_samples" label="refr_imap_samples">
						<value>20</value>
					</parameter>
					<parameter handler="CheckBoxHandler" listType="none" type="bool" name="refr_interpolation_on" label="refr_interpolation_on">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="refract" label="refract">
						<value>/Wood Fine AI 01/VRayBRDF/refract</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="refract_affect_alpha" label="refract_affect_alpha">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="refract_affect_shadows" label="refract_affect_shadows">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refract_depth" label="refract_depth">
						<value>5</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="refract_exit_color" label="refract_exit_color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="refract_exit_color_on" label="refract_exit_color_on">
						<value>0</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="refract_glossiness" label="refract_glossiness">
						<value>/Wood Fine AI 01/VRayBRDF/refract_glossiness</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="refract_ior" label="refract_ior">
						<value>/Wood Fine AI 01/VRayBRDF/refract_ior</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="refract_subdivs" label="refract_subdivs">
						<value>8</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="refract_trace" label="refract_trace">
						<value>1</value>
					</parameter>
					<parameter handler="FloatTexFrameHandler" listType="none" type="float texture" name="roughness" label="roughness">
						<value>/Wood Fine AI 01/VRayBRDF/roughness</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="self_illumination" label="self_illumination">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="self_illumination_gi" label="self_illumination_gi">
						<value>1</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="translucency" label="translucency">
						<value>0</value>
					</parameter>
					<parameter handler="ColorTexFrameHandler" listType="none" type="texture" name="translucency_color" label="translucency_color">
						<value>/Wood Fine AI 01/VRayBRDF/translucency_color</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="translucency_light_mult" label="translucency_light_mult">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="translucency_scatter_coeff" label="translucency_scatter_coeff">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="translucency_scatter_dir" label="translucency_scatter_dir">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="translucency_thickness" label="translucency_thickness">
						<value>1000</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="use_environment_override" label="use_environment_override">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="anisotropy_float" label="anisotropy_float" isUserData="1">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="anisotropy_rotation_float" label="anisotropy_rotation_float" isUserData="1">
						<value>0</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="float texture" name="anisotropy_rotation_tex" label="anisotropy_rotation_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="anisotropy_rotation_tex_mult" label="anisotropy_rotation_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="anisotropy_rotation_tex_on" label="anisotropy_rotation_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="float texture" name="anisotropy_tex" label="anisotropy_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="anisotropy_tex_mult" label="anisotropy_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="anisotropy_tex_on" label="anisotropy_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="anisotropy_uvwgen_channel" label="anisotropy_uvwgen_channel" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="diffuse_color" label="diffuse_color" isUserData="1">
						<value>
							<r>0.218</r>
							<g>0.218</g>
							<b>0.218</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="acolor texture" name="diffuse_tex" label="diffuse_tex" isUserData="1">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="diffuse_tex_mult" label="diffuse_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="diffuse_tex_on" label="diffuse_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="environment_override_color" label="environment_override_color" isUserData="1">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="acolor texture" name="environment_override_tex" label="environment_override_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="environment_override_tex_mult" label="environment_override_tex_mult" isUserData="1">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="environment_override_tex_on" label="environment_override_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="fog_color_tex_color" label="fog_color_tex_color" isUserData="1">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="texture" name="fog_color_tex_tex" label="fog_color_tex_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="fog_color_tex_tex_mult" label="fog_color_tex_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="fog_color_tex_tex_on" label="fog_color_tex_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="fresnel_ior_float" label="fresnel_ior_float" isUserData="1">
						<value>1.6</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="float texture" name="fresnel_ior_tex" label="fresnel_ior_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="fresnel_ior_tex_mult" label="fresnel_ior_tex_mult" isUserData="1">
						<value>1.0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="fresnel_ior_tex_on" label="fresnel_ior_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="hilight_glossiness_float" label="hilight_glossiness_float" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="texture" name="hilight_glossiness_tex" label="hilight_glossiness_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="hilight_glossiness_tex_mult" label="hilight_glossiness_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="hilight_glossiness_tex_on" label="hilight_glossiness_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="linear_workflow" label="linear_workflow" isUserData="1">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="opacity_float" label="opacity_float" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="float texture" name="opacity_tex" label="opacity_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="opacity_tex_mult" label="opacity_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="opacity_tex_on" label="opacity_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="reflect_color" label="reflect_color" isUserData="1">
						<value>
							<r>0.267358</r>
							<g>0.267358</g>
							<b>0.267358</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="reflect_glossiness_float" label="reflect_glossiness_float" isUserData="1">
						<value>0.75</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="float texture" name="reflect_glossiness_tex" label="reflect_glossiness_tex" isUserData="1">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap2</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="reflect_glossiness_tex_mult" label="reflect_glossiness_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="reflect_glossiness_tex_on" label="reflect_glossiness_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="acolor texture" name="reflect_tex" label="reflect_tex" isUserData="1">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="reflect_tex_mult" label="reflect_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="reflect_tex_on" label="reflect_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="refract_color" label="refract_color" isUserData="1">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refract_glossiness_float" label="refract_glossiness_float" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="refract_glossiness_tex" label="refract_glossiness_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refract_glossiness_tex_mult" label="refract_glossiness_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="refract_glossiness_tex_on" label="refract_glossiness_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refract_ior_float" label="refract_ior_float" isUserData="1">
						<value>1.6</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="refract_ior_tex" label="refract_ior_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refract_ior_tex_mult" label="refract_ior_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="refract_ior_tex_on" label="refract_ior_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="acolor texture" name="refract_tex" label="refract_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refract_tex_mult" label="refract_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="refract_tex_on" label="refract_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="roughness_float" label="roughness_float" isUserData="1">
						<value>0</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="float texture" name="roughness_tex" label="roughness_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="roughness_tex_mult" label="roughness_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="roughness_tex_on" label="roughness_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="texture_multiplier_mode" label="texture_multiplier_mode" isUserData="1">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="translucency_color_color" label="translucency_color_color" isUserData="1">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="acolor texture" name="translucency_color_tex" label="translucency_color_tex" isUserData="1">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="translucency_color_tex_mult" label="translucency_color_tex_mult" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="translucency_color_tex_on" label="translucency_color_tex_on" isUserData="1">
						<value>1</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
	</Asset>
	<Asset renderer="vray" url="/Wood Fine AI 01" type="material" layout="defvrmat">
		<plugin>
			<vrayplugin version="8" type="material" name="MtlASGVIS">
				<parameters>
					<parameter handler="default" listType="none" type="float" name="alpha" label="alpha">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="alpha_tex" label="alpha_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="alpha_tex_mult" label="alpha_tex_mult">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="bg_color" label="bg_color">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="plugin" name="bg_tex" label="bg_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="bg_tex_mult" label="bg_tex_mult">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="plugin" type="list" name="brdfs" label="brdfs">
						<value>
							<list>
								<entry>/Wood Fine AI 01/VRayBRDF</entry>
							</list>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="bump_delta_scale" label="bump_delta_scale">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="bump_on" label="bump_on">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="bump_shadows" label="bump_shadows">
						<value>0</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="plugin" name="bump_tex" label="bump_tex">
						<value>/Wood Fine AI 01/TexBitmap</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="bump_tex_mult" label="bump_tex_mult">
						<value>0.01</value>
					</parameter>
					<parameter handler="default" listType="none" type="float texture" name="bump_tex_mult_tex" label="bump_tex_mult_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="cast_shadow" label="cast_shadow">
						<value>1</value>
					</parameter>
					<parameter handler="PluginListPicker" listType="plugin" type="list" name="channels" label="channels">
						<value>
							<list/>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="compute_bump_for_shadows" label="compute_bump_for_shadows">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="disable_volume_fog" label="disable_volume_fog">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="displace_continuity" label="displace_continuity">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="displace_edge_length" label="displace_edge_length">
						<value>4</value>
					</parameter>
					<parameter handler="default" listType="none" type="integer" name="displace_max_subdivs" label="displace_max_subdivs">
						<value>256</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="displace_on" label="displace_on">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="displace_shift" label="displace_shift">
						<value>0</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="plugin" name="displace_tex" label="displace_tex">
						<value>/Wood Fine AI 01/TexBitmap1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="displace_tex_mult" label="displace_tex_mult">
						<value>0.01</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="displace_use_globals" label="displace_use_globals">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="displace_view_dependent" label="displace_view_dependent">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="displace_water_level" label="displace_water_level">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="double_sided" label="double_sided">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="gi_color" label="gi_color">
						<value>
							<r>0</r>
							<g>0</g>
							<b>0</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="plugin" name="gi_tex" label="gi_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="gi_tex_mult" label="gi_tex_mult">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="ignore_objects" label="ignore_objects">
						<value>0</value>
					</parameter>
					<parameter handler="ComboBoxHandler" listType="none" type="integer" name="map_type" label="map_type">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="material_id_color" label="material_id_color">
						<value>
							<r>0.952941</r>
							<g>0.94902</g>
							<b>0.00392157</b>
						</value>
					</parameter>
					<parameter handler="default" listType="none" type="plugin" name="normal_uvwgen" label="normal_uvwgen">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="only_visible_in_secondary" label="only_visible_in_secondary">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="override_bg" label="override_bg">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="override_gi" label="override_gi">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="override_reflect" label="override_reflect">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="override_refract" label="override_refract">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="reflect_color" label="reflect_color">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="plugin" name="reflect_tex" label="reflect_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="reflect_tex_mult" label="reflect_tex_mult">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="color" name="refract_color" label="refract_color">
						<value>
							<r>1</r>
							<g>1</g>
							<b>1</b>
						</value>
					</parameter>
					<parameter handler="TextureHandler" listType="none" type="plugin" name="refract_tex" label="refract_tex">
						<value/>
					</parameter>
					<parameter handler="default" listType="none" type="float" name="refract_tex_mult" label="refract_tex_mult">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="short_circuit" label="short_circuit">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="effected_by_mtl_override" label="effected_by_mtl_override" isUserData="1">
						<value>1</value>
					</parameter>
					<parameter handler="default" listType="none" type="string" name="material_type" label="material_type" isUserData="1">
						<value>Generic</value>
					</parameter>
					<parameter handler="default" listType="none" type="bool" name="reflect_on_backside" label="reflect_on_backside" isUserData="1">
						<value>0</value>
					</parameter>
					<parameter handler="default" listType="none" type="string" name="swatch_type" label="swatch_type" isUserData="1">
						<value>floor</value>
					</parameter>
					<parameter handler="default" listType="none" type="texture" name="viewport_texture" label="viewport_texture" isUserData="1">
						<value>/Wood Fine AI 01/VRayBRDF/TexBitmap</value>
					</parameter>
				</parameters>
			</vrayplugin>
		</plugin>
		<preview>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</preview>
	</Asset>
</vrmat>

